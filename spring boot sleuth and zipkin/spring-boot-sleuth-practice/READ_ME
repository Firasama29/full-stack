steps to configure sleuth in spring boot application for logging:

    1. Add maven dependency
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-starter-cloud-sleuth</artifactId>
        </dependency>

    2. Add a logback.xml

    =======================================================================================================================================
        <?xml version="1.0" encoding="UTF-8"?>
        <configuration packagingData="true">

            <include resource="org/springframework/boot/logging/logback/defaults.xml"/>

            <property name="log.stdout.pattern"
                      value="%green(%d{yyyyMMdd'T'HHmmss}) %magenta([%thread]) %highlight(%-5level) %cyan(%logger{15}) %msg%n"/>
            <property name="log.pattern"
                      value="%d{yyyyMMdd'T'HHmmss} ${LOG_LEVEL_PATTERN:-%5p} %thread %logger{15} %msg%n"/>
            <property name="log.group" value="/com/neo/iban"/>
            <property name="log.level" value="INFO"/>
            <property name="log.region" value="eu-west-1"/>
            <property name="log.maxBatchLogEvents" value="50"/>
            <property name="log.maxFlushTimeMillis" value="30000"/>
            <property name="log.maxBlockTimeMillis" value="5000"/>
            <timestamp key="date" datePattern="yyyyMMdd"/>

            <shutdownHook class="ch.qos.logback.core.hook.DelayingShutdownHook"/>

            <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
                <encoder>
                    <pattern>${log.stdout.pattern}</pattern>
                </encoder>
            </appender>

            <appender name="ASYNC_AWS_LOG_APPENDER" class="ca.pjer.logback.AwsLogsAppender">
                <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
                    <level>${log.level}</level>
                </filter>
                <layout>
                    <pattern>${log.pattern}</pattern>
                </layout>
                <logGroupName>${log.group}</logGroupName>
                <logStreamName>neo-${date}</logStreamName>
                <maxBatchLogEvents>${log.maxBatchLogEvents}</maxBatchLogEvents>
                <maxFlushTimeMillis>${log.maxFlushTimeMillis}</maxFlushTimeMillis>
                <maxBlockTimeMillis>${log.maxBlockTimeMillis}</maxBlockTimeMillis>
                <logRegion>${log.region}</logRegion>
            </appender>

            <springProfile name="local">
                <root level="${log.level}">
                    <appender-ref ref="STDOUT"/>
                </root>
            </springProfile>

            <springProfile name="local">
                <root level="${log.level}">
                    <appender-ref ref="ASYNC_AWS_LOG_APPENDER"/>
                </root>
            </springProfile>
        </configuration>
    =======================================================================================================================================

    3. Add bootstrap.yml file:
       		because Sleuth has problem with loading up the application name if the name is only configured in application.yaml.
       		So create a bootstrap.yml file with the application name which should be loaded before application.yml
       			spring:
       			  application:
       				name: 'application-name'

    4. Configure AOP for logging. Either in the same project or a separate one and add it as a dependency